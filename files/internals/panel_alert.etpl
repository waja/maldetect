if [ -z "$type" ]; then
	type=scan
fi
cat >> $tmpf <<EOF
HOST:      $HOSTNAME
SCAN ID:   $scanid
STARTED:   $scan_start_hr
COMPLETED: $scan_end_hr
ELAPSED:   ${scan_et}s [find: ${file_list_et}s]

EOF
if [ "$spath" ]; then
	echo "PATH:          $hrspath" >> $tmpf
fi
if [ "$days" ] && [ ! "$days" == "all" ]; then
	echo "RANGE:         $days days" >> $tmpf
fi
cat >> $tmpf <<EOF
TOTAL HITS:    $user_tot_hits
TOTAL CLEANED: $user_tot_cl

EOF
if [ "$quarantine_hits" == "0" ] && [ ! "$tot_hits" == "0" ]; then
 echo "WARNING: Automatic quarantine is currently disabled, detected threats are still accessible to users!" >> $tmpf
 echo "To enable, set quarantine_hits=1 and/or to quarantine hits from this scan run:" >> $tmpf
 echo -e "/usr/local/sbin/maldet -q $datestamp.$$\n" >> $tmpf
elif [ "$quarantine_hits" == "1" ]; then
 echo "NOTICE: Automatic quarantine is enabled, and all detected threats have been quarantined." >> $tmpf
 echo "All quarantined files have been moved to $quardir, and their metadata have been preserved." >> $tmpf
 echo "Please see below for details on which files have been moved to quarantine." >> $tmpf
fi
if [ "$quarantine_clean" == "1" ]; then
  if [ "$type" == "scan" ] && [ -f "$sessdir/clean.$$" ] && [ ! -z "$(cat $sessdir/clean.$$)" ]; then
	cleaned_list="$sessdir/clean.$$"
  fi
  if [ -f "$cleaned_list" ]; then
cat >> $tmpf <<EOF
CLEANED & RESTORED FILES:
$(cat $cleaned_list)

EOF
  fi
 if [ "$quarantine_suspend_user" == "1" ]; then
  if [ -f "$sessdir/suspend.users.$$" ] && [ ! -z "$(cat $sessdir/suspend.users.$$)" ]; then
	suspended_list="$sessdir/suspend.users.$$"
  fi
  if [ -f "$suspended_list" ]; then
cat >> $tmpf <<EOF
SUSPENDED ACCOUNTS:
$(cat "$suspended_list")

EOF
  fi
 fi
fi

if [ ! "$user_tot_hits" == "0" ]; then
 hitlist_file="$tmpdir/.${sys_user}.hits"
 if [ -f "$hitlist_file" ]; then
 	echo "FILE HIT LIST:" >> $tmpf
        if [ "$coltest" ]; then
                cat $hitlist_file | column -s ':' -t -o ':' >> $tmpf
        else
                cat $hitlist_file >> $tmpf
        fi
 fi
fi

cat >> $tmpf <<EOF
===============================================
Linux Malware Detect v$ver < proj@rfxn.com >
EOF
